<!-- MessageComponent.razor -->
@using Pilot.BlazorClient.Data
@using Pilot.BlazorClient.ViewModels
@using Pilot.BlazorClient.ViewModels.UserViewModels
@using Pilot.Contracts.Data.Enums

<div class="message @(IsCurrentUser ? "sent" : "received")">
    <div class="message-content">
        <div class="message-header">
            <a href="@GetUserProfileLink(Message.UserId)">
                <img src="@TempFileService.GetUrl(SenderImage)" alt="avatar"/>
                <span class="sender-name">@SenderName</span>
            </a>
            <span class="message-time">@MessageTime</span>
        </div>
        <div class="message-text">
            @Message.Text
        </div>
    </div>
</div>

@code {
    [Parameter] public MessageViewModel Message { get; set; } = null!;

    [Parameter] public ICollection<UserViewModel> Users { get; set; } = null!;

    [Parameter] public UserViewModel User { get; set; } = null!;

    // непроизводительно и плохо - факт, я знаю
    private string SenderName
    {
        get
        {
            return Message.UserId switch
            {
                (int)ChatMemberId.Reminder => "Reminder",
                (int)ChatMemberId.Ai => "AI Assistent",
                _ => Users.Any() ? Users.FirstOrDefault(u => u.Id == Message.UserId)?.UserName ?? "Unknown" : User.UserName ?? "Unknown"
            };
        }
    }

    private string SenderImage
    {
        get
        {
            return Message.UserId switch
            {
                (int)ChatMemberId.Reminder => "/Images/Chat/reminder.png",
                (int)ChatMemberId.Ai => "/Images/Chat/ai.png",
                _ => Users.Any() ? Users.FirstOrDefault(u => u.Id == Message.UserId)?.AvatarImage ?? "/Images/Chat/default.jpg" : User.AvatarImage ?? "/Images/Chat/default.jpg",
            };
        }
    }

    private bool IsCurrentUser => Message.UserId == User.Id;

    private string MessageTime => Message.CreateAt!.Value.ToString("hh:mm tt"); // Формат времени

    private string GetUserProfileLink(int? userId) => $"/account/{userId}";
}

<style>
    .message {
        margin: 10px 0;
        padding: 10px;
        border-radius: 10px;
        max-width: 70%;
        word-wrap: break-word;
    }

    .sent {
        justify-self: right;
        background-color: #007bff;
        color: white;
        align-self: flex-end;
    }

    .received {
        justify-self: left;
        background-color: #f1f1f1;
        color: black;
        align-self: flex-start;
    }

    .message-content {
        display: flex;
        flex-direction: column;
    }

    .message-header {
        display: flex;
        justify-content: space-between;
        font-size: 0.85rem;
        margin-bottom: 5px;
        color: white;
    }

    .sender-name {
        font-weight: bold;
    }

    .message-time {
        color: #888;
    }

    .message-text {
        font-size: 1rem;
        line-height: 1.4;
    }

    .message-header img {
        object-fit: cover;
        width: 20px;
        height: 20px;
        border-radius: 50%;
    }

    .sent a {
        color: white;
    }

    .received a {
        color: black;
    }
</style>