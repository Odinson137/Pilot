<div class="textbox-container">
    <textarea @bind="_messageText" placeholder="@Localizer.GetString("TypeMessage", "Chat")" class="textbox"></textarea>
    <button class="send-btn" @onclick="ClickSendButton" aria-label="@Localizer.GetString("Send", "Chat")">
        <i class="fas fa-paper-plane"></i>
    </button>
</div>

@code {
    private string? _messageText;
    [Parameter] public EventCallback<string> OnSendMessageClick { get; set; }

    private async Task ClickSendButton()
    {
        if (!string.IsNullOrEmpty(_messageText))
        {
            var text = _messageText;
            _messageText = "";
            await OnSendMessageClick.InvokeAsync(text);
        }
    }
}

<style>
    .textbox-container {
        display: flex;
        align-items: center;
        padding: 0.75rem 1.5rem;
        background: var(--surface);
        border-top: 1px solid var(--border);
        box-shadow: var(--shadow);
    }

    .textbox {
        flex-grow: 1;
        border: 1px solid var(--border);
        border-radius: 20px;
        padding: 0.75rem 1rem;
        font-size: 1rem;
        resize: none;
        outline: none;
        background: var(--background);
        color: var(--text);
        transition: var(--transition);
    }

    .textbox:focus {
        border-color: var(--secondary);
        box-shadow: 0 0 5px rgba(59, 130, 246, 0.3);
    }

    .send-btn {
        margin-left: 0.75rem;
        border: none;
        background: var(--secondary);
        color: white;
        font-size: 1rem;
        padding: 0.75rem;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
    }

    .send-btn:hover {
        background: var(--primary);
        transform: scale(1.1);
    }

    .send-btn i {
        font-size: 1.2rem;
    }
</style>
