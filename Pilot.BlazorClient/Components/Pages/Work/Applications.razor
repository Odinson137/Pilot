@using Pilot.BlazorClient.Data
@using Pilot.BlazorClient.Interface
@using Pilot.BlazorClient.ViewModels
@using Pilot.Contracts.Data.Enums
@inject IWorkPageService WorkPageService

<div class="applications-container">
    <div class="applications-header">
        <h2 style="margin-right: 10px">Job Applications</h2>
        <div class="filters">
            <div class="search-box">
                <input type="text" placeholder="Search applications..." @bind="_searchTerm" @bind:event="oninput"/>
                <i class="fas fa-search"></i>
            </div>
            <select @bind="_statusFilter">
                <option value="">All Statuses</option>
                @foreach (var status in Enum.GetValues(typeof(ApplicationStatus)))
                {
                    <option value="@status">@status</option>
                }
            </select>
        </div>
    </div>

    <div class="applications-grid">
        @if (_applications.Any())
        {
            @foreach (var application in _applications)
            {
                <div class="application-card">
                    <div class="applicant-info">
                        <div class="avatar">
                            @if (!string.IsNullOrEmpty(application.UserId.ToString()))
                            {
                                <img src="@TempFileService.GetUrl(_users.First(c => c.Id == application.UserId).User!.AvatarImage)" alt="@application.UserId"/>
                            }
                        </div>
                        <div class="details">
                            <h3>@_users.First(c => c.Id == application.UserId).User!.Name</h3>
                            <p>@application.CompanyPost.Post.Title</p>
                            <span
                                class="application-date">Applied: @application.CreateAt!.Value.ToShortDateString()</span>
                        </div>
                    </div>
                    <div class="application-status @application.Status.ToString().ToLower()">
                        @application.Status
                    </div>
                    <div class="actions">
                        <button @onclick="() => ViewApplication(application)" class="btn-view">
                            <i class="fas fa-eye"></i> View
                        </button>
                        <button @onclick="() => UpdateStatus(application)" class="btn-status">
                            <i class="fas fa-edit"></i> Update Status
                        </button>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-applications">
                <i class="fas fa-inbox"></i>
                <p>No job applications found</p>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public int UserId { get; set; }
    [Parameter] public int CompanyId { get; set; }

    private ICollection<JobApplicationViewModel> _applications = [];
    private ICollection<CompanyUserViewModel> _users = [];
    private string _searchTerm = "";
    private ApplicationStatus? _statusFilter;

    protected override async Task OnInitializedAsync()
    {
        _applications = await WorkPageService.GetCompanyJobApplicationsAsync(CompanyId);
        _users = await WorkPageService.GetJobApplicationUsersAsync(_applications);
    }

    private async Task ViewApplication(JobApplicationViewModel application)
    {
        // TODO: Implement application viewing logic
    }

    private async Task UpdateStatus(JobApplicationViewModel application)
    {
        // TODO: Implement status update logic
    }

}