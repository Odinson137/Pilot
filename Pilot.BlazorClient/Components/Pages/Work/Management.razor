@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Pilot.BlazorClient.Interface
@using Pilot.BlazorClient.ViewModels
@inject IWorkPageService WorkPageService
@inject ProtectedSessionStorage ProtectedSessionStorage
@inject IUserService UserService
@inject NavigationManager NavigationManager

<div class="container mt-5 mb-5" style="max-width: 1000px;">
    <!-- Page Description -->
    <div class="text-center mb-4">
        <h1 class="display-4 text-primary">Company Management</h1>
        <p class="text-muted">Easily manage employees, projects, and teams within your company.</p>
    </div>

    <!-- Search Bar -->
    <div class="mb-4">
        <div class="input-group">
            <input @bind="_searchQuery" class="form-control" placeholder="Search projects, teams, or employees..." />
            <button class="btn btn-outline-primary" type="button">
                <i class="bi bi-search"></i>
            </button>
        </div>
    </div>

    <!-- Projects Section -->
    <div class="mb-5">
        <h3 class="text-success">Projects</h3>
        @if (_projects != null && _projects.Any())
        {
            @foreach (var project in _projects)
            {
                <div class="card mb-3 border-success shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title text-success">@project.Name</h5>
                        <p class="card-text">@project.Description</p>
                        <p class="text-muted"><strong>Status:</strong> <span class="badge bg-info">@project.ProjectStatus</span></p>
                        <h6>Teams:</h6>
                        @if (project.Teams.Any())
                        {
                            <ul class="list-group list-group-flush">
                                @foreach (var team in project.Teams)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <span><strong>@team.Name</strong> - @team.Description</span>
                                        <div>
                                            <button class="btn btn-outline-primary btn-sm" @onclick="() => EditTeam(team.Id)">Edit</button>
                                        </div>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted">No teams in this project.</p>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No projects found.</p>
        }
        <button class="btn btn-success" @onclick="AddProject">
            <i class="bi bi-plus-circle"></i> Add New Project
        </button>
    </div>

    <!-- Employees Section -->
    @if (_isLoading)
    {
        <div class="text-center">
            <p class="text-info">Loading employee details...</p>
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (_employees != null)
    {
        <div class="mb-5">
            <h3 class="text-primary">Employees</h3>
            @foreach (var employee in _employees.Where(e => string.IsNullOrWhiteSpace(_searchQuery) || e.User!.FullName.Contains(_searchQuery, StringComparison.OrdinalIgnoreCase)))
            {
                <div class="card mb-4 border-primary shadow-sm">
                    <div class="card-body">
                        <h4 class="card-title text-primary">@employee.User?.FullName</h4>
                        <p><strong>Projects:</strong></p>
                        @if (_projects != null && _projects.Any())
                        {
                            @foreach (var project in _projects)
                            {
                                <button class="btn btn-outline-success btn-sm ms-2" @onclick="() => AddEmployeeToProject(employee.Id, project.Id)">
                                    <i class="bi bi-plus-circle"></i> Add to @project.Name
                                </button>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No projects available to assign.</p>
                        }
                        <p><strong>Teams:</strong> @string.Join(", ", employee.Teams.Select(t => t.Name))</p>
                        <button class="btn btn-outline-secondary btn-sm mt-3" @onclick="() => AddTeam(employee.Id)">
                            <i class="bi bi-people"></i> Add to Team
                        </button>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-danger">No employees found.</p>
    }
</div>

@code {
    [Parameter] public int UserId { get; set; }
    [Parameter] public int CompanyId { get; set; }

    private bool _isLoading = true;
    private string _searchQuery = string.Empty;
    private ICollection<CompanyUserViewModel>? _employees;
    private ICollection<ProjectViewModel>? _projects;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        try
        {
            _employees = await WorkPageService.GetCompanyEmployeesAsync(CompanyId);
            _projects = await WorkPageService.GetProjectsAsync(CompanyId);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void AddProject()
    {
        // Logic for adding a new project
    }

    private void AddTeam(int employeeId)
    {
        // Logic for adding a new team
    }

    private void AddEmployeeToProject(int employeeId, int projectId)
    {
        // Logic for adding an employee to a project
    }

    private void EditTeam(int teamId)
    {
        // Logic for editing a team
    }
}
