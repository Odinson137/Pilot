@page "/Work"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Pilot.BlazorClient.Interface
@using Pilot.BlazorClient.ViewModels
@using Pilot.BlazorClient.ViewModels.UserViewModels
@using Pilot.BlazorClient.Components.Pages.User
@using Pilot.BlazorClient.Components.Helpers
@using Pilot.BlazorClient.Data
@using Pilot.BlazorClient.Service
@using Pilot.Contracts.Data.Enums
@inject IWorkPageService WorkPageService
@inject ProtectedSessionStorage ProtectedSessionStorage
@inject IUserService UserService
@inject NavigationManager NavigationManager
@inject IJsonLocalizationService Localizer

<PageTitle>@Localizer.GetString("PageTitle", "Work")</PageTitle>

<AuthCheck/>

@if (_isLoading)
{
    <Loading/>
}
else
{
    <div class="work-container">
        <nav class="work-nav">
            <ul>
                @if (_companyUser == null)
                {
                    <li @onclick="() => SetActiveTab(0)"
                        class="@GetActiveClass(0)">@Localizer.GetString("JoinOrCreateCompany", "Work")</li>
                    <li @onclick="() => SetActiveTab(4)"
                        class="@GetActiveClass(4)">@Localizer.GetString("YourApplications", "Work")</li>
                }
                else
                {
                    <li @onclick="() => SetActiveTab(1)"
                        class="@GetActiveClass(1)">@Localizer.GetString("Dashboard", "Work")</li>
                    @* <li @onclick="() => SetActiveTab(2)" class="@GetActiveClass(2)">@Localizer.GetString("Summary", "Work")</li> *@
                    <li @onclick="() => SetActiveTab(3)"
                        class="@GetActiveClass(3)">@Localizer.GetString("Tasks", "Work")</li>
                    @if (_companyUser.Permissions.HasPermission(Permission.ViewTaskTable))
                    {
                        <li @onclick="() => SetActiveTab(11)"
                            class="@GetActiveClass(11)">@Localizer.GetString("TaskManagement", "Work")</li>
                    }

                    @if (_companyUser.Permissions.HasPermission(Permission.ViewCompanyManagement))
                    {
                        <li @onclick="() => SetActiveTab(7)"
                            class="@GetActiveClass(7)">@Localizer.GetString("CompanyManagement", "Work")</li>
                    }

                    @if (_companyUser.Permissions.HasPermission(Permission.ViewHrTable))
                    {
                        <li @onclick="() => SetActiveTab(8)"
                            class="@GetActiveClass(8)">@Localizer.GetString("HRManagement", "Work")</li>
                    }
                }
            </ul>
        </nav>

        @if (_user != null)
        {
            @switch (_activeTab)
            {
                case 0:
                    <NoCompany/>
                    break;
                case 1:
                    <UserGreeting CompanyUserId="@_companyUser!.Id" UserName="@_user.UserName" UserId="@_user.Id"/>
                    break;
                case 2:
                    <Summary CompanyUserId="@_companyUser!.Id" UserId="@_user.Id" CompanyId="@_companyUser!.Company.Id"/>
                    break;
                case 3:
                    <UserTask CompanyUserId="@_companyUser!.Id" UserId="@_user.Id" ProjectId="@_projectId"/>
                    break;
                case 4:
                    <NewUserApplication/>
                    break;
                case 7:
                    <CompanyManagement CompanyUserId="@_companyUser!.Id" UserId="@_user.Id" CompanyId="@_companyUser!.Company.Id"/>
                    break;
                case 8:
                    <HRManagement CompanyUserId="@_companyUser!.Id" UserId="@_user.Id" CompanyId="@_companyUser!.Company.Id"/>
                    break;
                case 11:
                    <TaskManagement CompanyUserId="@_companyUser!.Id" UserId="@_user.Id" CompanyId="@_companyUser!.Company.Id"/>
                    break;
                case 20:
                    <Applications CompanyUserId="@_companyUser!.Id" UserId="@_user.Id" CompanyId="@_companyUser!.Company.Id"/>
                    break;
            }
        }
    </div>
}

@code {
    private int _activeTab = 1;
    private bool _isLoading = true;
    private UserViewModel? _user;
    private CompanyUserViewModel? _companyUser;
    private ICollection<ProjectViewModel>? _projects;
    private int _projectId;
    private int _taskCount;
    private int _teamCount;
    private int _vacancyCount;

    protected override async Task OnInitializedAsync()
    {
        _user = await UserService.GetCurrentUserAsync();

        _companyUser = await WorkPageService.GetUserCompanyAsync(_user.Id);
        if (_companyUser != null)
        {
            _projects = await WorkPageService.GetProjectsAsync(_companyUser.Company.Id);
            _taskCount = (await WorkPageService.GetUserTasksAsync(_companyUser.Id)).Count;
            _teamCount = (await WorkPageService.GetCompanyEmployeesAsync(_companyUser.Company.Id)).Count;
            _vacancyCount = (await WorkPageService.GetPostsAsync(_companyUser.Company.Id)).Count;
        }

        var currentTabStorageResult = await ProtectedSessionStorage.GetAsync<int>("work:currentTab");
        if (currentTabStorageResult.Success)
            _activeTab = currentTabStorageResult.Value;

        _isLoading = false;
    }

    private void SetActiveTab(int tabId)
    {
        _activeTab = tabId;
        ProtectedSessionStorage.SetAsync("work:currentTab", tabId);
        StateHasChanged();
    }

    private string GetActiveClass(int tabId)
    {
        return _activeTab == tabId ? "active" : "";
    }

}

<style>
    /* Переменные стилей */
    :root {
        --primary-color: #007bff;
        --secondary-color: #6c757d;
        --bg-light: #f8f9fa;
        --bg-white: #ffffff;
        --text-primary: #333;
        --text-secondary: #666;
        --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        --gradient: linear-gradient(135deg, #007bff, #6c757d);
    }

    /* Main container */
    .work-container {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        background-color: var(--bg-light);
        padding: 0;
    }

    /* Navigation */
    .work-nav {
        background-color: var(--bg-white);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .work-nav ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
        display: flex;
        gap: 2rem;
        padding: 1rem 2rem;
    }

    .work-nav li {
        font-size: 1.1rem;
        color: var(--text-secondary);
        cursor: pointer;
        padding: 0.5rem 1rem;
        transition: color 0.3s ease, background-color 0.3s ease;
    }

    .work-nav li:hover {
        color: var(--primary-color);
        background-color: rgba(0, 0, 0, 0.05);
        border-radius: 8px;
    }

    .work-nav li.active {
        color: var(--primary-color);
        font-weight: 600;
        border-bottom: 3px solid var(--primary-color);
    }

    /* Main content */
    .work-main {
        flex-grow: 1;
        padding: 2rem;
        background-color: var(--bg-light);
    }

    /* Dashboard grid */
    .dashboard-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .dashboard-card {
        background-color: var(--bg-white);
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: var(--card-shadow);
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .dashboard-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }

    .dashboard-card h3 {
        font-size: 1.5rem;
        color: var(--text-primary);
        margin-bottom: 1rem;
    }

    .dashboard-card p {
        font-size: 1.2rem;
        color: var(--text-secondary);
        margin-bottom: 1.5rem;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

    .btn-primary {
        background-color: var(--primary-color);
        color: white;
        border: none;
    }

    .btn-primary:hover {
        background-color: var(--secondary-color);
        transform: translateY(-2px);
    }
</style>