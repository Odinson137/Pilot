@* @page "/calendar" *@
@* @using ChartJs.Blazor.Common *@
@* @using ChartJs.Blazor.Common.Axes *@
@* @using ChartJs.Blazor.LineChart *@
@* @using Pilot.BlazorClient.Interface *@
@* @using Pilot.BlazorClient.ViewModels *@
@* @using BlazorBootstrap *@
@* @inject IUserService UserService *@
@* *@
@* <div class="calendar-container"> *@
@*     <button @onclick="PreviousMonth" class="month-btn">←</button> *@
@*     <span>@CurrentMonth.ToString("MMMM yyyy")</span> *@
@*     <button @onclick="NextMonth" class="month-btn">→</button> *@
@* *@
@*     <div class="chart-wrapper"> *@
@*         <LineChart Config="@_chartConfig" /> *@
@*     </div> *@
@* </div> *@
@* *@
@* @code { *@
@*     private LineConfig _chartConfig; *@
@*     private DateTime CurrentMonth; *@
@*     private List<HistoryActionViewModel> UserActions = new(); *@
@* *@
@*     protected override async Task OnInitializedAsync() *@
@*     { *@
@*         CurrentMonth = DateTime.Now; *@
@*         await LoadUserActivity(); *@
@*         ConfigureChart(); *@
@*     } *@
@* *@
@*     private async Task LoadUserActivity() *@
@*     { *@
@*         // Загрузка данных активности пользователя *@
@*         // UserActions = await UserService.GetUserActionsAsync(); // Замените этим реальным методом *@
@*         UserActions = []; // Замените этим реальным методом *@
@*     } *@
@* *@
@*     private void ConfigureChart() *@
@*     { *@
@*         _chartConfig = new LineConfig *@
@*         { *@
@*             Options = new LineOptions *@
@*             { *@
@*                 Responsive = true, *@
@*                 Legend = new Legend { Display = false }, *@
@*                 Scales = new Scales *@
@*                 { *@
@*                     XAxes = new List<CartesianAxis> *@
@*                     { *@
@*                         new CategoryAxis *@
@*                         { *@
@*                             ScaleLabel = new ScaleLabel { Display = true, LabelString = "Days" } *@
@*                         } *@
@*                     }, *@
@*                     YAxes = new List<CartesianAxis> *@
@*                     { *@
@*                         new LinearCartesianAxis *@
@*                         { *@
@*                             ScaleLabel = new ScaleLabel { Display = true, LabelString = "Actions" } *@
@*                         } *@
@*                     } *@
@*                 } *@
@*             } *@
@*         }; *@
@* *@
@*         // Настройка данных *@
@*         var activityData = Enumerable.Range(1, DateTime.DaysInMonth(CurrentMonth.Year, CurrentMonth.Month)) *@
@*             .Select(day => new *@
@*             { *@
@*                 Day = day, *@
@*                 Count = UserActions.Count(a => a.CreateAt?.Date == new DateTime(CurrentMonth.Year, CurrentMonth.Month, day)) *@
@*             }) *@
@*             .ToList(); *@
@* *@
@*         foreach (var value in activityData.Select(d => d.Day.ToString()).ToList()) *@
@*         { *@
@*             _chartConfig.Data.Labels.Add(value); *@
@*         } *@
@* *@
@*         _chartConfig.Data.Datasets.Add(new LineDataset<int> *@
@*         { *@
@*             Label = "User Activity", *@
@*             BackgroundColor = "rgba(75, 192, 192, 0.2)", *@
@*             BorderColor = "rgba(75, 192, 192, 1)", *@
@*             Fill = false, *@
@*         }); *@
@*     } *@
@* *@
@*     private void NextMonth() *@
@*     { *@
@*         CurrentMonth = CurrentMonth.AddMonths(1); *@
@*         ConfigureChart(); *@
@*     } *@
@* *@
@*     private void PreviousMonth() *@
@*     { *@
@*         CurrentMonth = CurrentMonth.AddMonths(-1); *@
@*         ConfigureChart(); *@
@*     } *@
@* } *@
