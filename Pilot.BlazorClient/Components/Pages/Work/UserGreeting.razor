@using Pilot.BlazorClient.Interface
@using Pilot.BlazorClient.ViewModels
@inject IWorkPageService WorkPageService
@inject IUserService UserService

<div class="user-greeting">
    <h2>@GetGreetingMessage(), @UserName! 🌟</h2>

    @if (_companyUser != null && _company != null)
    {
        <p>You have been working at <strong>@_company?.Title</strong> for <strong>@_daysInCompany</strong> days.</p>
        
        <div class="today-activity">
            <h3>Today's Activity</h3>
            @if (todayActivities.Count > 0)
            {
                <div class="today-activity-scroll">
                    @foreach (var activity in todayActivities)
                    {
                        <div class="activity-item">
                            <span>@activity</span>
                        </div>
                    }
                </div>
            }
            else
            {
                <p>No activities recorded today.</p>
            }
        </div>
        
        @if (_projects != null)
        {
            <p>You are participating in <strong>@_projects.Count</strong> project(s)</p>
        }
    }
</div>

@code {
    [Parameter] public string? UserName { get; set; }
    [Parameter] public int UserId { get; set; }

    private CompanyUserViewModel? _companyUser;
    private CompanyViewModel? _company;
    private int _daysInCompany;
    private ICollection<ProjectViewModel>? _projects;
    private ICollection<TeamViewModel>? _teams;
    private List<string> todayActivities = [];
    
    protected override async Task OnInitializedAsync()
    {
        _companyUser = await WorkPageService.GetUserCompanyAsync(UserId);
        _company = await WorkPageService.GetCompanyAsync(_companyUser.Company.Id);

        _daysInCompany = (DateTime.Now - _companyUser.CreateAt!.Value).Days;

        _projects = await WorkPageService.GetUserProjectsAsync(_companyUser.Id);
        Console.WriteLine("Greeting loaded");
    }

    private string GetGreetingMessage()
    {
        var hour = DateTime.Now.Hour;
        return hour < 12 ? "Good morning" :
            hour < 18 ? "Good afternoon" : "Good evening";
    }
}


<style>
    .user-greeting {
        padding: 20px;
        background-color: #f5f6f8;
        border-radius: 10px;
        color: #2d3e50;
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
        font-size: 16px;
    }

    .user-greeting h2 {
        margin-bottom: 10px;
        color: #34495e;
    }

    .user-greeting ul {
        list-style-type: none;
        padding-left: 0;
    }

    .user-greeting li {
        margin: 5px 0;
        padding: 10px;
        background-color: #ecf0f1;
        border-radius: 5px;
    }

</style>