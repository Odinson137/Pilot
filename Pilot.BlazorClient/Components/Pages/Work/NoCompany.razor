@using Pilot.BlazorClient.Interface
@using Pilot.BlazorClient.ViewModels
@inject NavigationManager NavigationManager
@inject ICompanyPageService CompanyPageService
@inject IJsonLocalizationService Localizer

<div class="no-company-container">
    <div class="message-box">
        <h2>@Localizer.GetString("NoCompanyTitle", "NoCompany")</h2>
        <p>@Localizer.GetString("NoCompanySubtitle", "NoCompany")</p>

        <div class="options-container">
            <div class="option">
                <h3>@Localizer.GetString("FindCompanyTitle", "NoCompany")</h3>
                <p>@Localizer.GetString("FindCompanyDescription", "NoCompany")</p>
                <button class="btn btn-primary" @onclick="NavigateToVacancies">@Localizer.GetString("ViewVacancies", "NoCompany")</button>
            </div>

            <div class="option">
                <h3>@Localizer.GetString("CreateCompanyTitle", "NoCompany")</h3>
                <p>@Localizer.GetString("CreateCompanyDescription", "NoCompany")</p>
                <div class="create-company-form">
                    <input type="text" @bind="_newCompanyName" placeholder="@Localizer.GetString("EnterCompanyName", "NoCompany")" class="form-control" />
                    <button class="btn btn-success" @onclick="CreateCompany" disabled="@string.IsNullOrWhiteSpace(_newCompanyName)">
                        @Localizer.GetString("CreateCompanyButton", "NoCompany")
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string _newCompanyName = "";

    private void NavigateToVacancies()
    {
        NavigationManager.NavigateTo("/Vacancy");
    }

    private async Task CreateCompany()
    {
        if (!string.IsNullOrWhiteSpace(_newCompanyName))
        {
            var company = new CompanyViewModel
            {
                Title = _newCompanyName
            };

            await CompanyPageService.CreateValueAsync(company, _ =>
            {
                NavigationManager.Refresh(true);
            });
        }
    }
}
