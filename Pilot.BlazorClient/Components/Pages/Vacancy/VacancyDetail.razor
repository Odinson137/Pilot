@page "/Vacancy/{vacancyId:int}"
@using Pilot.BlazorClient.Data
@using Pilot.BlazorClient.Interface
@using Pilot.BlazorClient.Service
@using Pilot.BlazorClient.ViewModels
@using Pilot.BlazorClient.Components.Helpers
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ICompanyPostPageService PageService
@inject NavigationManager Navigation
@inject IUserService UserService
@inject IJsonLocalizationService Localizer
@inject ProtectedSessionStorage ProtectedSessionStorage

<!-- Main container with centered content -->
<div style="max-width: 800px; margin: 0 auto; padding: 3rem 1rem; margin-bottom: 100px;">
    @if (_isLoading)
    {
        <!-- Loading state using existing Loading component -->
        <div style="display: flex; justify-content: center; align-items: center; height: 16rem;">
            <Loading />
        </div>
    }
    else if (_vacancy != null && _company != null)
    {
        <!-- Company Info Section -->
        <div style="background: white; border-radius: 0.75rem; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); margin-bottom: 1.5rem; animation: fadeIn 0.5s ease-out;">
            <div style="display: flex; align-items: center; padding: 1.5rem;">
                <img src="@TempFileService.GetUrl(_company.Logo)" alt="@Localizer.GetString("CompanyInfo", "VacancyDetail")" 
                     style="width: 80px; height: 80px; border-radius: 50%; margin-right: 1rem; object-fit: cover;" />
                <div>
                    <h4 style="font-size: 1.5rem; font-weight: 600; color: #1e3a8a; margin-bottom: 0.5rem;">@_company.Title</h4>
                    <button style="padding: 0.5rem 1rem; border: 2px solid #1e3a8a; color: #1e3a8a; border-radius: 0.375rem; transition: all 0.3s;"
                            @onclick="() => NavigateToCompany(_company.Id)"
                            onmouseover="this.style.backgroundColor='#1e3a8a'; this.style.color='white';"
                            onmouseout="this.style.backgroundColor='transparent'; this.style.color='#1e3a8a';">
                        @Localizer.GetString("ViewCompanyPage", "VacancyDetail")
                    </button>
                </div>
            </div>
        </div>

        <!-- Vacancy Info Section -->
        <div style="background: white; border-radius: 0.75rem; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); margin-bottom: 1.5rem; animation: fadeIn 0.5s ease-out;">
            <div style="padding: 1.5rem;">
                <h3 style="font-size: 1.75rem; font-weight: 700; color: #1e3a8a; margin-bottom: 0.5rem;">@_vacancy.Post.Title</h3>
                <h6 style="font-size: 1rem; color: @(_vacancy.IsOpen ? "#16a34a" : "#dc2626"); margin-bottom: 1rem;">
                    @Localizer.GetString("Status", "VacancyDetail"): @(_vacancy.IsOpen ? Localizer.GetString("Open", "VacancyDetail") : Localizer.GetString("Closed", "VacancyDetail"))
                </h6>
                <p style="font-size: 1rem; color: #4a5568; margin-bottom: 1rem;">@_vacancy.Post.Description</p>
                @if (!string.IsNullOrEmpty(_vacancy.AdditionalRequirements))
                {
                    <div style="background: #fef3c7; padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem;">
                        <strong>@Localizer.GetString("AdditionalRequirements", "VacancyDetail"):</strong> @_vacancy.AdditionalRequirements
                    </div>
                }
                <div style="font-size: 0.875rem; color: #4a5568; space-y: 0.25rem;">
                    <p>@Localizer.GetString("PostedOn", "VacancyDetail"): @_vacancy.CreateAt!.Value.ToShortDateString()</p>
                    @if (_vacancy.ExpectedSalary.HasValue)
                    {
                        <p>@Localizer.GetString("ExpectedSalary", "VacancyDetail"): $@_vacancy.ExpectedSalary.Value.ToString("N0") / year</p>
                    }
                    @if (_vacancy.RequiredExperienceYears.HasValue)
                    {
                        <p>@Localizer.GetString("RequiredExperience", "VacancyDetail"): @_vacancy.RequiredExperienceYears.Value @(_vacancy.RequiredExperienceYears.Value == 1 ? Localizer.GetString("Year", "VacancyDetail") : Localizer.GetString("Years", "VacancyDetail"))</p>
                    }
                    <p>@Localizer.GetString("Applications", "VacancyDetail"): @_vacancy.Applications.Count</p>
                </div>
            </div>
        </div>

        <!-- Required Skills Section -->
        <div style="background: white; border-radius: 0.75rem; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); margin-bottom: 1.5rem; animation: fadeIn 0.5s ease-out;">
            <div style="padding: 1.5rem;">
                <h5 style="font-size: 1.25rem; font-weight: 600; color: #1e3a8a; margin-bottom: 1rem;">@Localizer.GetString("RequiredSkills", "VacancyDetail")</h5>
                @if (_skills?.Any() == true)
                {
                    <ul style="list-style: none; padding: 0;">
                        @foreach (var skill in _skills)
                        {
                            <li style="padding: 0.5rem 0; font-size: 1rem; color: #4a5568;">
                                <span style="color: #16a34a; margin-right: 0.5rem;">✔</span> @skill.Title
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p style="font-size: 0.875rem; color: #6b7280; font-style: italic;">@Localizer.GetString("NoSkills", "VacancyDetail")</p>
                }
            </div>
        </div>

        <!-- Application Form Section -->
        <div style="background: white; border-radius: 0.75rem; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); animation: fadeIn 0.5s ease-out;">
            <div style="padding: 1.5rem;">
                <h5 style="font-size: 1.25rem; font-weight: 600; color: #1e3a8a; margin-bottom: 1rem;">@Localizer.GetString("SubmitApplication", "VacancyDetail")</h5>
                @if (!_isAuthorized)
                {
                    <p style="font-size: 0.875rem; color: #dc2626; background: #fee2e2; padding: 1rem; border-radius: 0.5rem;">
                        @Localizer.GetString("NotAuthorized", "VacancyDetail")
                    </p>
                }
                else if (_isAlreadySent)
                {
                    <div style="font-size: 0.875rem; color: #dc2626; background: #fee2e2; padding: 1rem; border-radius: 0.5rem;">
                        <p style="margin-bottom: 1rem;">@Localizer.GetString("AlreadySent", "VacancyDetail")</p>
                        <button style="padding: 0.75rem 1.5rem; background-color: #1e3a8a; color: white; border-radius: 0.5rem; transition: background-color 0.3s;"
                                @onclick="NavigateToApplications"
                                onmouseover="this.style.backgroundColor='#1d4ed8';"
                                onmouseout="this.style.backgroundColor='#1e3a8a';">
                            <span style="margin-right: 0.5rem;">➤</span> @Localizer.GetString("ViewApplications", "VacancyDetail")
                        </button>
                    </div>
                }
                else if (_isInCompany)
                {
                    <p style="font-size: 0.875rem; color: #dc2626; background: #fee2e2; padding: 1rem; border-radius: 0.5rem;">
                        @Localizer.GetString("AlreadyInCompany", "VacancyDetail")
                    </p>
                }
                else
                {
                    <textarea class="form-control" 
                              style="width: 100%; min-height: 120px; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.5rem; font-size: 1rem; margin-bottom: 1rem; transition: all 0.3s;"
                              placeholder="@Localizer.GetString("CoverLetterPlaceholder", "VacancyDetail")" 
                              @bind="_coverLetter"></textarea>
                    <button style="padding: 0.75rem 1.5rem; background-color: #16a34a; color: white; border-radius: 0.5rem; transition: background-color 0.3s;"
                            @onclick="SubmitApplication"
                            onmouseover="this.style.backgroundColor='#15803d';"
                            onmouseout="this.style.backgroundColor='#16a34a';">
                        <span style="margin-right: 0.5rem;">➤</span> @Localizer.GetString("SubmitButton", "VacancyDetail")
                    </button>
                }
            </div>
        </div>
    }
    else
    {
        <!-- Error state for missing vacancy -->
        <div style="text-align: center; padding: 3rem 0;">
            <p style="font-size: 1.125rem; color: #dc2626;">@Localizer.GetString("VacancyNotFound", "VacancyDetail")</p>
        </div>
    }
</div>

@code {
    [Parameter] public int VacancyId { get; set; }

    private CompanyPostViewModel? _vacancy;
    private ICollection<SkillViewModel>? _skills;
    private CompanyViewModel? _company;
    private bool _isLoading = true;
    private bool _isAuthorized;
    private bool _isInCompany;
    private bool _isAlreadySent;
    private string _coverLetter = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        try
        {
            _isAuthorized = await UserService.IsUserAuthorizationAsync();
            _vacancy = await PageService.GetVacancyAsync(VacancyId);
            if (_vacancy != null)
            {
                _skills = await PageService.GetPostSkillsAsync(_vacancy.Post);
                _company = await PageService.GetCompanyAsync(_vacancy.Post.CompanyId);
                if (_isAuthorized)
                {
                    _isInCompany = await PageService.IsUserInCompanyAsync(_vacancy.Post.CompanyId);
                }
            }

            _isAlreadySent = await PageService.IsAlreadySendAsync(VacancyId);
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task SubmitApplication()
    {
        if (_vacancy != null && _isAuthorized && !_isInCompany)
        {
            await PageService.SubmitApplicationAsync(VacancyId, _coverLetter, _ =>
            {
                Navigation.NavigateTo("/Vacancy");
            });
        }
    }

    private void NavigateToCompany(int companyId)
    {
        Navigation.NavigateTo($"/Company/{companyId}");
    }

    private async Task NavigateToApplications()
    {
        await ProtectedSessionStorage.SetAsync("work:currentTab", 4);
        Navigation.NavigateTo("/Work");
    }
}

<style>
    .form-control:focus {
        border-color: #1e3a8a;
        box-shadow: 0 0 5px rgba(30, 58, 138, 0.3);
        outline: none;
    }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>
