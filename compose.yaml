services:
  api_server:
    container_name: api-server
    build:
      context: .
      dockerfile: Pilot.Api/Dockerfile
    ports:
    - 8010:8080
    depends_on:
      worker_server:
        condition: service_started
  identity_server:
    build:
      context: .
      dockerfile: Pilot.Identity/Dockerfile
    ports:
    - 8020:8080
    depends_on:
      pilot_identity_mysql:
        condition: service_healthy
  worker_server:
    build:
      context: .
      dockerfile: Pilot.Worker/Dockerfile
    ports:
    - 8030:8080
    depends_on:
      pilot_mysql:
        condition: service_healthy
  messenger_server:
    build:
      context: .
      dockerfile: Pilot.Messenger/Dockerfile
    ports:
    - 8040:8080
    depends_on:
      pilot_messenger_mysql:
        condition: service_healthy
  storage_server:
    build:
      context: .
      dockerfile: Pilot.Storage/Dockerfile
    ports:
    - 8050:8080
    depends_on:
      pilot_storage_mysql:
        condition: service_healthy
  capability_server:
    build:
      context: .
      dockerfile: Pilot.Capability/Dockerfile
    ports:
    - 8060:8080
    depends_on:
      pilot_capability_mysql:
        condition: service_healthy
  rabbitmq:
    container_name: pilot-rabbitmq
    image: rabbitmq:3-management
    ports:
    - 5672:5672
    - 15672:15672
  redis:
    container_name: pilot-redis
    image: redis
    ports:
    - 6379:6379
  pilot_identity_mysql:
    container_name: pilot-identity-mysql
    image: mysql:8.0
    ports:
    - "3308:3306"
    environment:
      MYSQL_DATABASE: PilotDb
      MYSQL_ROOT_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
  pilot_mysql:
    container_name: pilot-mysql
    image: mysql:8.0
    ports:
    - "3309:3306"
    environment:
      MYSQL_DATABASE: PilotDb
      MYSQL_ROOT_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
  pilot_messenger_mysql:
    container_name: pilot-messenger-mysql
    image: mysql:8.0
    ports:
    - "3310:3306"
    environment:
      MYSQL_DATABASE: PilotDb
      MYSQL_ROOT_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
  pilot_storage_mysql:
    container_name: pilot-storage-mysql
    image: mysql:8.0
    ports:
    - "3311:3306"
    environment:
      MYSQL_DATABASE: PilotDb
      MYSQL_ROOT_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
  pilot_capability_mysql:
    container_name: pilot-capability-mysql
    image: mysql:8.0
    ports:
    - "3312:3306"
    environment:
      MYSQL_DATABASE: PilotDb
      MYSQL_ROOT_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
  backgroundjob_service:
    build:
      context: .
      dockerfile: Pilot.BackgroundJob/Dockerfile
    depends_on:
      pilot_capability_mysql:
        condition: service_healthy
    ports:
    - 8070:8080
  pilot_backgroundjob_mysql:
    container_name: pilot-backgroundjob-mysql
    image: mysql:8.0
    ports:
    - "3313:3306"
    environment:
      MYSQL_DATABASE: PilotDb
      MYSQL_ROOT_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
  pilot_backgroundjob_hangfire_mssql:
    container_name: pilot-backgroundjob-hangfire-mssql
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
    - 1433:1433
    environment:
    - ACCEPT_EULA=Y
    - MSSQL_SA_PASSWORD=S3cur3P@ssW0rd!
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "S3cur3P@ssW0rd!" -Q "SELECT 1" || exit 1
      timeout: 3s
      retries: 10
      start_period: 10s
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.44
    ports:
    - "5775:5775/udp"
    - "6831:6831/udp"
    - "6832:6832/udp"
    - "16686:16686"
    - "14268:14268"
    - "14250:14250"
    - "9411:9411"
  audithistory_service:
    build:
      context: .
      dockerfile: Pilot.AuditHistory/Dockerfile
    ports:
    - 8090:8080
    depends_on:
      - clickhouse
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000" 
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=default
...
